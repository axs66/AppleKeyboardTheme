# 优化建议：构建deb时间3分钟，主要耗时在Theos和SDK下载/解压。可通过更高效的缓存、并行构建、减少冗余命令等方式优化。

name: CI

on:
  push:
    paths:
      - '.github/workflows/build.yml'
      - '**.xm'
      - 'control'
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      # 缓存Theos和SDK，缓存key包含theos和sdk的commit hash，避免每次都下载
      - name: Cache Theos and SDK
        id: cache-theos
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/theos
            ${{ github.workspace }}/theos/sdks/iPhoneOS16.0.sdk
          key: theos-v1-${{ runner.os }}-${{ hashFiles('**/build.yml') }}-${{ hashFiles('**/Tweak.xm') }}

      - name: Prepare Theos
        if: steps.cache-theos.outputs.cache-hit != 'true'
        uses: axs66/theos-action@main

      - name: Install iOS SDK (with PrivateFrameworks)
        if: steps.cache-theos.outputs.cache-hit != 'true'
        run: |
          set -e
          mkdir -p "$GITHUB_WORKSPACE/theos/sdks"
          cd "$GITHUB_WORKSPACE/theos/sdks"
          SDK_FILE=iPhoneOS16.0.sdk.tar.xz
          if [ ! -d "iPhoneOS16.0.sdk" ]; then
            echo "Downloading iPhoneOS16.0 SDK..."
            curl -L -o "$SDK_FILE" \
              https://github.com/theos/sdks/releases/download/ios-16.0/iPhoneOS16.0.sdk.tar.xz \
              || curl -L -o "$SDK_FILE" https://github.com/theos/sdks/releases/download/ios-16.4/iPhoneOS16.4.sdk.tar.xz \
              || curl -L -o "$SDK_FILE" https://github.com/theos/sdks/releases/download/ios-16.5/iPhoneOS16.5.sdk.tar.xz
            tar -xJf "$SDK_FILE" || true
            for D in iPhoneOS16.*.sdk; do
              if [ -d "$D" ] && [ "$D" != "iPhoneOS16.0.sdk" ]; then
                ln -snf "$D" iPhoneOS16.0.sdk
              fi
            done
          fi
          ls -la

      # 构建rootless和roothide包，使用并行加速
      - name: Build packages (parallel)
        run: |
          rm -f ${{ github.workspace }}/packages/*.deb
          make package FINALPACKAGE=1 THEOS_PACKAGE_SCHEME=rootless -j$(sysctl -n hw.logicalcpu) &
          make package FINALPACKAGE=1 THEOS_PACKAGE_SCHEME=roothide -j$(sysctl -n hw.logicalcpu) &
          wait

      - name: List generated Deb packages
        run: ls ${{ github.workspace }}/packages

      - name: Create GitHub Release
        id: release
        run: |
          VERSION=$(date +v%Y%m%d%H%M)
          gh release create $VERSION ${{ github.workspace }}/packages/*.deb --title "KeyboardColorTweak $VERSION" --notes "Automated release of .deb files"
        env:
          GH_TOKEN: ${{ secrets.PAT }}

      - name: Upload specific Deb packages
        uses: actions/upload-artifact@v4.3.3
        with:
          name: KeyboardColorTweak
          path: ${{ github.workspace }}/packages/*.deb
